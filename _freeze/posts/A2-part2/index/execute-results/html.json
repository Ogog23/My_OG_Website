{
  "hash": "4a126c1126cc06af2995d133b2785cc9",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"A2- Movie Profits\"\nauthor: \"Gayatri Jadhav\"\n---\n\n\n\n## Introduction\n\nThis is a dataset pertaining to movies and genres, modified for ease of analysis and plotting.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(mosaic)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\nAttaching package: 'mosaic'\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(skimr)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'skimr'\n\nThe following object is masked from 'package:mosaic':\n\n    n_missing\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(ggformula)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#Reading in te dataset\nmovieprofits <- read_delim(\"../../Data/movie_profit.csv\", delim = \";\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 3310 Columns: 10\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \";\"\nchr  (4): movie, distributor, mpaa_rating, genre\ndbl  (4): production_budget, domestic_gross, worldwide_gross, decade\nnum  (1): profit_ratio\ndate (1): release_date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\nglimpse(movieprofits)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 3,310\nColumns: 10\n$ release_date      <date> 2005-07-22, 1998-08-28, 1997-03-28, 2000-07-14, 201…\n$ movie             <chr> \"November\", \"I Married a Strange Person\", \"Love and …\n$ production_budget <dbl> 250000, 250000, 250000, 250000, 250000, 250000, 2500…\n$ domestic_gross    <dbl> 191862, 203134, 212285, 1055671, 3395391, 3802390, 3…\n$ worldwide_gross   <dbl> 191862, 203134, 743216, 1157672, 3728400, 3809226, 3…\n$ distributor       <chr> \"Other\", \"Other\", \"Other\", \"Other\", \"Paramount Pictu…\n$ mpaa_rating       <chr> \"R\", NA, \"R\", \"R\", \"PG-13\", \"R\", \"R\", \"R\", \"R\", \"R\",…\n$ genre             <chr> \"Drama\", \"Comedy\", \"Comedy\", \"Drama\", \"Drama\", \"Dram…\n$ profit_ratio      <dbl> 7.674480e+13, 8.125360e+13, 2.972864e+14, 4.630688e+…\n$ decade            <dbl> 2000, 1990, 1990, 2000, 2010, 2000, 2010, 2000, 2010…\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nskim(movieprofits)\n```\n\n::: {.cell-output-display}\n\nTable: Data summary\n\n|                         |             |\n|:------------------------|:------------|\n|Name                     |movieprofits |\n|Number of rows           |3310         |\n|Number of columns        |10           |\n|_______________________  |             |\n|Column type frequency:   |             |\n|character                |4            |\n|Date                     |1            |\n|numeric                  |5            |\n|________________________ |             |\n|Group variables          |None         |\n\n\n**Variable type: character**\n\n|skim_variable | n_missing| complete_rate| min| max| empty| n_unique| whitespace|\n|:-------------|---------:|-------------:|---:|---:|-----:|--------:|----------:|\n|movie         |         0|          1.00|   1|  35|     0|     3310|          0|\n|distributor   |        42|          0.99|   5|  18|     0|        6|          0|\n|mpaa_rating   |       130|          0.96|   1|   5|     0|        4|          0|\n|genre         |         0|          1.00|   5|   9|     0|        5|          0|\n\n\n**Variable type: Date**\n\n|skim_variable | n_missing| complete_rate|min        |max        |median     | n_unique|\n|:-------------|---------:|-------------:|:----------|:----------|:----------|--------:|\n|release_date  |         0|             1|1936-02-05 |2017-12-22 |2005-06-30 |     1723|\n\n\n**Variable type: numeric**\n\n|skim_variable     | n_missing| complete_rate|         mean|           sd|       p0|          p25|          p50|          p75|         p100|hist  |\n|:-----------------|---------:|-------------:|------------:|------------:|--------:|------------:|------------:|------------:|------------:|:-----|\n|production_budget |         0|             1| 3.326794e+07| 3.460741e+07| 2.50e+05| 9.500000e+06| 2.000000e+07| 4.500000e+07| 1.750000e+08|▇▂▁▁▁ |\n|domestic_gross    |         0|             1| 4.551509e+07| 5.852794e+07| 0.00e+00| 6.530094e+06| 2.558731e+07| 6.046695e+07| 4.745447e+08|▇▁▁▁▁ |\n|worldwide_gross   |         0|             1| 9.384123e+07| 1.389514e+08| 4.23e+02| 1.086144e+07| 4.040903e+07| 1.184703e+08| 1.162782e+09|▇▁▁▁▁ |\n|profit_ratio      |         0|             1| 4.319388e+14| 1.501736e+15| 1.38e+10| 7.861269e+13| 1.962499e+14| 3.942158e+14| 4.315179e+16|▇▁▁▁▁ |\n|decade            |         0|             1| 1.998790e+03| 1.061000e+01| 1.93e+03| 1.990000e+03| 2.000000e+03| 2.010000e+03| 2.010000e+03|▁▁▁▃▇ |\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ninspect(movieprofits)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\ncategorical variables:  \n         name     class levels    n missing\n1       movie character   3310 3310       0\n2 distributor character      6 3268      42\n3 mpaa_rating character      4 3180     130\n4       genre character      5 3310       0\n                                   distribution\n1 10 Days in a Madhouse (0%) ...               \n2  Other (53.2%), Warner Bros. (11%) ...       \n3 R (46.4%), PG-13 (33.5%), PG (17.4%) ...     \n4 Drama (36.5%), Comedy (24.1%) ...            \n\nDate variables:  \n          name class      first       last min_diff  max_diff    n missing\n1 release_date  Date 1936-02-05 2017-12-22   0 days 2592 days 3310       0\n\nquantitative variables:  \n               name   class      min           Q1       median           Q3\n1 production_budget numeric 2.50e+05 9.500000e+06 2.000000e+07 4.500000e+07\n2    domestic_gross numeric 0.00e+00 6.530094e+06 2.558731e+07 6.046695e+07\n3   worldwide_gross numeric 4.23e+02 1.086144e+07 4.040903e+07 1.184703e+08\n4      profit_ratio numeric 1.38e+10 7.861269e+13 1.962499e+14 3.942158e+14\n5            decade numeric 1.93e+03 1.990000e+03 2.000000e+03 2.010000e+03\n           max         mean           sd    n missing\n1 1.750000e+08 3.326794e+07 3.460741e+07 3310       0\n2 4.745447e+08 4.551509e+07 5.852794e+07 3310       0\n3 1.162782e+09 9.384123e+07 1.389514e+08 3310       0\n4 4.315179e+16 4.319388e+14 1.501736e+15 3310       0\n5 2.010000e+03 1.998785e+03 1.061308e+01 3310       0\n```\n\n\n:::\n:::\n\n\n\n## Data Dictionary\n\n::: callout-note\n\n**Quantitative Variables**:\n\n1.  **production_budget**: The amount of money spent to produce the movie (numeric).\n\n2.  **domestic_gross**: The revenue earned from the domestic market (numeric).\n\n3.  **worldwide_gross**: The total revenue earned globally (numeric).\n:::\n\n::: callout-note\n**Qualitative Variables**:\n\n1.  **release_date**: The date the movie was released (character).\n\n2.  **movie**: The title of the movie (character).\n\n3.  **distributor**: The company responsible for distributing the movie (character).\n\n4.  **mpaa_rating**: The rating assigned to the movie by the Motion Picture Association (character).\n\n5.  **genre**: The category or genre of the movie (character).\n\n6.  **decade**: The decade in which the movie was released (character).\n:::\n\n::: callout-note\n**Observations**:\n\n-   The dataset contains information about various movies, including their financial performance, release details, and categorization.\n\n-   **Rows and columns**: The dataset consists of 3310 rows and 10 columns\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmovieprofits <- movieprofits %>%\n  drop_na() %>% mutate(across(everything(), ~ as.character(.))) # I converted all columns to character type so that I don’t run into issues later when grouping by genre and distributor to calculate the median profit ratio. This way, everything is in a consistent format and I avoid any weird errors.This was not taught in class, I looked it up.\n\n\nglimpse(movieprofits)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 3,150\nColumns: 10\n$ release_date      <chr> \"2005-07-22\", \"1997-03-28\", \"2000-07-14\", \"2011-10-2…\n$ movie             <chr> \"November\", \"Love and Other Catastrophes\", \"Chuck&Bu…\n$ production_budget <chr> \"250000\", \"250000\", \"250000\", \"250000\", \"250000\", \"2…\n$ domestic_gross    <chr> \"191862\", \"212285\", \"1055671\", \"3395391\", \"3802390\",…\n$ worldwide_gross   <chr> \"191862\", \"743216\", \"1157672\", \"3728400\", \"3809226\",…\n$ distributor       <chr> \"Other\", \"Other\", \"Other\", \"Paramount Pictures\", \"Pa…\n$ mpaa_rating       <chr> \"R\", \"R\", \"R\", \"PG-13\", \"R\", \"R\", \"R\", \"R\", \"R\", \"R\"…\n$ genre             <chr> \"Drama\", \"Comedy\", \"Drama\", \"Drama\", \"Drama\", \"Actio…\n$ profit_ratio      <chr> \"7.67448e+13\", \"2.972864e+14\", \"4.630688e+14\", \"1.49…\n$ decade            <chr> \"2000\", \"1990\", \"2000\", \"2010\", \"2000\", \"2010\", \"200…\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ninspect(movieprofits)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\ncategorical variables:  \n                name     class levels    n missing\n1       release_date character   1613 3150       0\n2              movie character   3150 3150       0\n3  production_budget character    297 3150       0\n4     domestic_gross character   3127 3150       0\n5    worldwide_gross character   3147 3150       0\n6        distributor character      6 3150       0\n7        mpaa_rating character      4 3150       0\n8              genre character      5 3150       0\n9       profit_ratio character   3149 3150       0\n10            decade character      9 3150       0\n                                    distribution\n1  2000-12-22 (0.3%), 2005-09-30 (0.2%) ...     \n2  10 Days in a Madhouse (0%) ...               \n3  2e+07 (4.7%), 1e+07 (4.2%) ...               \n4  0 (0.7%), 5e+07 (0.1%) ...                   \n5  12900000 (0.1%), 191200000 (0.1%) ...        \n6   Other (53.3%), Warner Bros. (11.1%) ...     \n7  R (46.2%), PG-13 (33.7%), PG (17.4%) ...     \n8  Drama (36.8%), Comedy (24.2%) ...            \n9  5e+14 (0.1%), 1.00109022e+14 (0%) ...        \n10 2000 (43.7%), 2010 (31.3%) ...               \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nskim(movieprofits)\n```\n\n::: {.cell-output-display}\n\nTable: Data summary\n\n|                         |             |\n|:------------------------|:------------|\n|Name                     |movieprofits |\n|Number of rows           |3150         |\n|Number of columns        |10           |\n|_______________________  |             |\n|Column type frequency:   |             |\n|character                |10           |\n|________________________ |             |\n|Group variables          |None         |\n\n\n**Variable type: character**\n\n|skim_variable     | n_missing| complete_rate| min| max| empty| n_unique| whitespace|\n|:-----------------|---------:|-------------:|---:|---:|-----:|--------:|----------:|\n|release_date      |         0|             1|  10|  10|     0|     1613|          0|\n|movie             |         0|             1|   2|  35|     0|     3150|          0|\n|production_budget |         0|             1|   5|   9|     0|      297|          0|\n|domestic_gross    |         0|             1|   1|   9|     0|     3127|          0|\n|worldwide_gross   |         0|             1|   3|  10|     0|     3147|          0|\n|distributor       |         0|             1|   5|  18|     0|        6|          0|\n|mpaa_rating       |         0|             1|   1|   5|     0|        4|          0|\n|genre             |         0|             1|   5|   9|     0|        5|          0|\n|profit_ratio      |         0|             1|   5|  17|     0|     3149|          0|\n|decade            |         0|             1|   4|   4|     0|        9|          0|\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmovieprofits\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3,150 × 10\n   release_date movie           production_budget domestic_gross worldwide_gross\n   <chr>        <chr>           <chr>             <chr>          <chr>          \n 1 2005-07-22   November        250000            191862         191862         \n 2 1997-03-28   Love and Other… 250000            212285         743216         \n 3 2000-07-14   Chuck&Buck      250000            1055671        1157672        \n 4 2011-10-28   Like Crazy      250000            3395391        3728400        \n 5 2003-04-11   Better Luck To… 250000            3802390        3809226        \n 6 2017-04-28   Sleight         250000            3930990        3934450        \n 7 2002-06-28   Lovely and Ama… 250000            4210379        4613482        \n 8 2012-08-17   Compliance      270000            319285         830700         \n 9 2005-05-06   Fighting Tommy… 3e+05             10514          10514          \n10 1998-08-07   First Love, La… 3e+05             10876          10876          \n# ℹ 3,140 more rows\n# ℹ 5 more variables: distributor <chr>, mpaa_rating <chr>, genre <chr>,\n#   profit_ratio <chr>, decade <chr>\n```\n\n\n:::\n:::\n\n\n\n## Replicating the plot\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Creating a profit ratio column\nmovieprofits <- movieprofits %>%\n  mutate(profit_ratio = as.numeric(profit_ratio) / as.numeric(production_budget))  \n\n# Grouping by genre and distributor to calculate median profit ratio\nmedian_profit_data <- movieprofits %>%\n  group_by(genre, distributor) %>%\n  summarise(median_profit_ratio = median(profit_ratio, na.rm = TRUE)) %>%  # Calculate median\n  ungroup()  # Ungroup after summarizing\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'genre'. You can override using the\n`.groups` argument.\n```\n\n\n:::\n\n```{.r .cell-code}\nglimpse(median_profit_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 30\nColumns: 3\n$ genre               <chr> \"Action\", \"Action\", \"Action\", \"Action\", \"Action\", …\n$ distributor         <chr> \"20th Century Fox\", \"Other\", \"Paramount Pictures\",…\n$ median_profit_ratio <dbl> 4326662, 4289208, 3566068, 3356647, 3560683, 23373…\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Set graph theme\ntheme_set(theme_classic())\n\n# Creating the plot using the summarized data\nggplot(median_profit_data, aes(x = median_profit_ratio, y = genre)) + geom_col() + facet_wrap(~ distributor, nrow = 2, scales = \"free_x\") +\n  labs(title = \"Profits Made by Film Distributors\",\n       subtitle = \"Ratio of Profits to Budgets\",\n       x = \"Median Profit Ratio\",\n       y = \"Genre\") \n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n\n::: callout-note\nThe target variable is the **median profit ratio**. The predictor variables include **genre** and **distributor**.\n\nThis graph shows how much money films make compared to how much it costs to make them. On the bottom side, there is the median profit ratio, which is like a score that tells us how good a movie is at making money compared to its budget. If the score is high, it means the movie is making a lot more money than it cost to make. On the left side, there are 5 different film genres so we can see how each type of movie does in terms of profit. The graph has different sections for each film distributor, which means we can compare how different companies are doing with their movies in various genres. Each bar shows how well a particular genre is doing for a specific distributor. Longer bars meaning better profits. (We can perceive length better than height)\n\n### Inference\n\nFrom looking at this graph, we can say that horroe movies are making the most money for different distributors. On the flip side, action and adventure movies aren’t doing so well, so they might not be worth the investment. Overall, this graph can also help ppl in the film business figure out which movies to focus on, so they can make better decisions about what to produce.\n\n**Questions to answer-**\n\n-   How do different genres perform financially?\n\n-   Which distributors have the highest median profit ratios for their films?\n\n-   Is there a relationship between genre and distributor performance?\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}