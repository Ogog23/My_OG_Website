---
title: "A3 - Cartoons Dataset"
author: "Gayatri Jadhav"
prof: "Arvind Venkatadri"
---

## Introduction

This dataset shows ratings given by MAHE students to different cartoons. Each entry includes a Participant ID, Gender, Cartoon name, and Rating. The aim is to see if there are significant differences in how people rate each cartoon. By using ANOVA, we can find out if some cartoon is consistently rated higher or lower than the other.

```{r}
#| label: setup
library(tidyverse) # Tidy data processing
library(ggformula) # Formula based plots
library(mosaic) # Data inspection and Statistical Inference
library(broom) # Tidy outputs from Statistical Analyses
library(infer) # Statistical Inference, Permutation/Bootstrap
library(patchwork) # Arranging Plots
library(ggprism) # Interesting Categorical Axes
library(supernova) # Beginner-Friendly ANOVA Tables
```

```{r}
# Reading in the data
cartoon <- read_csv("../../Data/Cartoon.csv")

glimpse(cartoon)

```

```{r}
# Mutating by converting Gender and Cartoon into factors

cartoon_modified <- cartoon %>%
  dplyr::mutate(
  Gender = as_factor(Gender),
  Cartoon = as_factor(Cartoon)
  )
glimpse(cartoon_modified)
```

```{r}
# Set graph theme
theme_set(new = theme_classic())
##
gf_histogram(~Rating,
  fill = ~Cartoon,
  data = cartoon_modified, alpha = 0.5
) %>%
  gf_vline(xintercept = ~ mean(Rating)) %>%
  gf_labs(
    title = "Histograms of Cartoon Ratings Distributions",
    x = "Rating", y = "Count"
  ) %>%
  gf_text(11 ~ (mean(cartoon_modified$Rating) + 1.5),
    label = "Overall Mean"
  ) %>%
  gf_refine(guides(fill = guide_legend(title = "Cartoon")))
```

```{r}
# Set graph theme
theme_set(new = theme_classic())

# Creating faceted histograms with black outline, and overall mean line
gf_histogram(~Rating,
  data = cartoon_modified, alpha = 0.7, bins = 10,
  fill = ~Cartoon, color = "black"  # Black outline
) %>%
  gf_facet_wrap(~Cartoon) %>%  # Facet by cartoon
  gf_vline(xintercept = mean(~Rating, data = cartoon_modified), linetype = "dashed") %>%
  gf_labs(
    title = "Histograms of Cartoon Ratings Distributions by Cartoon",
    x = "Rating", y = "Count"
  ) 
```

::: callout-note
I tried facetting by cartoon, this way each cartoonâ€™s rating distribution can be observed independently, making it easier to spot whether the cartoon has ratings clustered around high or low values. It also easy to compare how each cartoon's ratings match up with the overall mean.
:::

```{r}
# Set graph theme
theme_set(new = theme_classic())
##
gf_boxplot(
  data = cartoon_modified,
  Rating ~ Cartoon,
  fill = ~ Cartoon,
  alpha = 0.5
) %>%
   gf_vline(xintercept = mean(cartoon_modified$Rating)) %>%
  gf_labs(
    title = "Boxplots of Cartoon Ratings vs Cartoon",
    x = "Cartoon", y = "Rating",
    caption = "Using ggprism"
  ) %>%
  gf_refine(
    scale_x_discrete(guide = "prism_bracket"),
    guides(fill = guide_legend(title = "Cartoon"))
  )
```

```{r}
# Perform ANOVA
cartoon_anova <- aov(Rating ~ Cartoon, data = cartoon_modified)

```

```{r}
supernova::pairwise(cartoon_anova,
  correction = "Bonferroni", # Try "Tukey"
  alpha = 0.05, # 95% CI calculation
  var_equal = TRUE, # We'll see
  plot = TRUE
)
```

```{r}
#ANOVA equation
supernova::equation(cartoon_anova)
```

```{r}
#Shapiro-Wilk test for normality on residuals
shapiro.test(x = cartoon_anova$residuals)
```

```{r}
# Shapiro-Wilk test for normality grouped by Cartoon
cartoon_modified %>%
  group_by(Cartoon) %>%
  group_modify(~ .x %>%
    select(Rating) %>%
    as_vector() %>%
    shapiro.test() %>%
    broom::tidy()
  )
```

```{r}
#Residuals histogram and QQ plot
# Set graph theme
theme_set(new = theme_classic())

cartoon_anova$residuals %>%
  as_tibble() %>%
  gf_dhistogram(~value, data = .) %>%
  gf_fitdistr()

cartoon_anova$residuals %>%
  as_tibble() %>%
  gf_qq(~value, data = .) %>%
  gf_qqstep() %>%
  gf_qqline()

# Shapiro-Wilk test for residuals
shapiro.test(cartoon_anova$residuals)

```

```{r}
# Variance check for each Cartoon group
cartoon_modified %>%
  group_by(Cartoon) %>%
  summarise(variance = var(Rating))

# Levene's test 
DescTools::LeveneTest(Rating ~ Cartoon, data = cartoon_modified)

# Fligner-Killeen test
fligner.test(Rating ~ Cartoon, data = cartoon_modified)
```

```{r}


cartoon_supernova <- supernova::pairwise(cartoon_anova,
  plot = TRUE,
  alpha = 0.05,
  correction = "Bonferroni"
)

cartoon_supernova

```

::: callout-note
Cartoons (like Chota Bheem) are rated consistently higher than others (like Doraemon). Students have a preference for Chota Bheem over the other cartoons, while Doraemon is rated lower in comparison.
:::

```{r}
# Workflow: ANOVA using Permutation Tests
# Observed F statistic
observed_infer <- cartoon_modified %>%
  specify(Rating ~ Cartoon) %>%
  hypothesise(null = "independence") %>%
  calculate(stat = "F")
```

```{r}
# Null distribution using permutation tests
null_dist_infer <- cartoon_modified %>%
  specify(Rating ~ Cartoon) %>%
  hypothesise(null = "independence") %>%
  generate(reps = 4999, type = "permute") %>%
  calculate(stat = "F")

```

```{r}
# Visualizing null distribution
null_dist_infer %>%
  visualise(method = "simulation") +
  shade_p_value(obs_stat = observed_infer$stat, direction = "right") +
  scale_x_continuous(trans = "log10", expand = c(0, 0)) +
  coord_cartesian(xlim = c(0.2, 500), clip = "off") +
  annotation_logticks(outside = FALSE) +
  theme_classic()
```

<https://av-quarto.netlify.app/content/courses/analytics/inference/modules/130-threemeansormore/>
